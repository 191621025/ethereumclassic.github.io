{"componentChunkName":"component---src-routes-index-js","path":"/","result":{"data":{"file":{"childImageSharp":{"fluid":{"aspectRatio":1.5017642907551165,"src":"/static/d7b6f1710d604a2449344286277ca8e4/5840c/banner.jpg","srcSet":"/static/d7b6f1710d604a2449344286277ca8e4/fbe3f/banner.jpg 300w,\n/static/d7b6f1710d604a2449344286277ca8e4/d4129/banner.jpg 600w,\n/static/d7b6f1710d604a2449344286277ca8e4/5840c/banner.jpg 1200w,\n/static/d7b6f1710d604a2449344286277ca8e4/07c9b/banner.jpg 1800w,\n/static/d7b6f1710d604a2449344286277ca8e4/0fdb1/banner.jpg 2400w,\n/static/d7b6f1710d604a2449344286277ca8e4/d7739/banner.jpg 4256w","sizes":"(max-width: 1200px) 100vw, 1200px"}}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"locale":"en","localeMetadata":{"locale":"en_US","lang":"en","title":"Ethereum Classic","description":"A decentralized platform that runs smart contracts: applications that run exactly as programmed without downtime, censorship or third party interference"},"i18n":{"json":{},"mdx":{"getStarted":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Get Started with Ethereum Classic\"), mdx(\"p\", null, \"Ethereum Classic is one of the purest projects in the crypto space. To really understand why ETC exists and why it's got so much potential, you'll need to know understand where it came from.\"), mdx(\"p\", null, \"Wherther you're a researcher, developer, investor, or just someone that's interested in finding out more, the best place to start is the ETC knowledge base.\"), mdx(ButtonLink, {\n    text: \"Knowledge Base\",\n    to: \"/knowledge\",\n    className: \"big\",\n    icon: \"angle-right\",\n    mdxType: \"ButtonLink\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","stayCurrent":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Stay Current\"), mdx(\"p\", null, \"The Ethereum Classic community has been publishing informative articles since it's inception. We always welcome and appreciate new contributions!\"), mdx(ButtonLink, {\n    text: \"Contribute Blog Articles\",\n    to: \"https://github.com/ethereumclassic/ethereumclassic.github.io\",\n    icon: \"angle-right\",\n    mdxType: \"ButtonLink\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","whatIsBlockchain":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Put simply, Ethereum Classic provides a way to manage digital assets without the need for intermediaries, such as banks and other financial institutions.\"), mdx(\"p\", null, \"ETC allows uncensorable smart contracts to be written, deployed and executed; it enables truly unstoppable programmable money.\"), mdx(\"p\", null, \"Ethereum Classic is the continuation of the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"original\"), \" non-forked Ethereum (ETH) chain and exists to preserve the principle of \\\"code is law\\\".\"), mdx(\"p\", null, \"To find out more about ETC's history and where it's going, check out the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/roadmap\"\n  }), \"Ethereum Classic roadmap\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","whatIsClassic":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"What is Ethereum Classic?\"), mdx(\"p\", null, \"Ethereum Classic is a decentralized platform that runs smart contracts: applications that can be run exactly as programmed without any possibility of downtime, censorship, or third party interference.\"), mdx(\"p\", null, \"Ethereum Classic consists of a cryptocurrency (ETC), a blockchain ledger, and an \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/ecosystem\"\n  }), \"ecosystem\"), \" of applications and services that run on top of it.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}}}}